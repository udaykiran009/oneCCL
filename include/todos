replace void* by buffer_type*, add std::enable_if for non-native types, add internal assert that buffer_type matches with dtype
how to read correct split field from attr, bit flags?
make comm_split, datatype, op, stream, coll attributes in similar way with env::create_<...>, attr->set<... >
stream_attr fields: device_type, in-order/out-of-order, priority, how map it on coll_attr.priority?
comm_group -> device_comm_creator/fabric,...
remove "virtual" in request methods if host/device paths have the same impl
consider to move deps at the end of coll params list
try to apply SFINAE with 1 type instead of 2
expose only native_<...>_type w/o reference and so on
return empty event wrapper for host comm, throw expection for get_native_handle() ?




1. std:: ... -> replace by own impl, llvm impl (uniqie_ptr place into own namespace)
2. write own
3. wrapper for std, unique ptr as field, redirect calls, reference AD library

look at unresolved symbols from libstd++

c++filt _ZN3ccl12communicator9alltoallvEPKvPKmPvS4_NS_8datatypeEPK15ccl_coll_attr_tRKSt10unique_ptrINS_6streamESt14default_deleteISB_EE
ccl::communicator::alltoallv(void const*, unsigned long const*, void*, unsigned long const*, ccl::datatype, ccl_coll_attr_t const*, std::unique_ptr<ccl::stream, std::default_delete<ccl::stream> > const&)

tbb-dev / task arena
